---
title: "Imputing like a Data Scientist"
author: "Anjani Sowmya Bollapragada - 23851219"
format: html
editor: visual
---


### Purpose

Exploring, visualizing, and imputing outliers and missing values (NAs) in a novel data set and produce publication quality graphs and tables.

### Required SetUp


```{r}
# Sets the number of significant figures to two - e.g., 0.01
options(digits = 2)

# Required package for quick package downloading and loading 
if (!require(pacman))
  install.packages("pacman")

pacman::p_load(BiocManager, # Colorblind friendly pallettes
               cluster, # K cluster analyses
               dlookr, # Exploratory data analysis
               formattable, # HTML tables from R outputs
               ggfortify, # Plotting tools for stats
               ggpubr, # Publishable ggplots
               here, # Standardizes paths to data
               kableExtra, # Alternative to formattable
               knitr, # Needed to write HTML reports
               missRanger, # To generate NAs
               plotly, # Visualization package
               rattle, # Decision tree visualization
               rpart, # rpart algorithm
               tidyverse, # Powerful data wrangling package suite
               visdat) # Another EDA visualization package

# Set global ggplot() theme
# Theme pub_clean() from the ggpubr package with base text size = 16
theme_set(theme_pubclean(base_size = 16)) 
# All axes titles to their respective far right sides
theme_update(axis.title = element_text(hjust = 1))
# Remove axes ticks
theme_update(axis.ticks = element_blank()) 
# Remove legend key
theme_update(legend.key = element_blank())
```

### Load and Examine Dataset


```{r}
dataset <- read.csv("week19_airline_safety.csv") |>
  # Add a categorical group
  mutate(no_events = ifelse(n_events >= 0 & n_events <= 50, "Less Number of Events", 
                            ifelse(n_events > 50 & n_events <= 100, "Medium number of Events", 
                                   "Large number of Events")),
         no_events = fct_rev(no_events))

# What does the data look like?
dataset |>
  head() |>
  formattable()
```


### Diagnose Outliers


```{r}
# Table showing outliers
dataset |>
  diagnose_outlier() |>
  filter(outliers_ratio > 0) |>  
  mutate(rate = outliers_mean / with_mean) |>
  arrange(desc(rate)) |> 
  select(-outliers_cnt) |>
  formattable() |>
  plot_outlier()
```


### Basic Exploration of Missing Values (NAs)


```{r}
# Randomly generate NAs for 30
na.dataset <- dataset |>
  generateNA(p = 0.3)

# First six rows
na.dataset |>
head() |>
  formattable()
```

```{r}
# Create the NA table
na.dataset |>
  plot_na_pareto(only_na = TRUE, plot = FALSE) |>
  formattable() # Publishable table
```


Plots showing the frequency of missing values


```{r}
# Plot the insersect of the columns with missing values
# This plot visualizes the table above
na.dataset |>
  plot_na_pareto(only_na = TRUE)
```


### Advanced Exploration of Missing Values (NAs)


```{r}
# Plot the intersect of the 5 columns with the most missing values
# This means that some combinations of columns have missing values in the same row
na.dataset |>
  select(airline, type_of_event, n_events) |>
  plot_na_intersect(only_na = TRUE) 
```


#### Determining if NA Observations are the Same

1. Missing values can be the same observation across several columns, this is not shown above
2. The visdat package can solve this with the vis_miss() function which shows the rows with missing values through ggplotly()


```{r}
# Interactive plotly() plot of all NA values to examine every row
na.dataset |>
 select(airline, type_of_event, n_events) |>
 vis_miss() |>
 ggplotly() 
```


### Impute Outliers and NAs

#### Classifying Outliers


```{r}
# Define the OkabeIto color palette
okabe_ito_palette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")

# Your ggplot code with the custom color palette
dataset %>%
  ggplot(aes(x = airline, y = no_events, fill = n_events)) +
  geom_boxplot(width = 0.5, outlier.size = 2, outlier.alpha = 0.5) +
  xlab("Airline") +
  ylab("Number of Events") +
  scale_fill_manual(values = okabe_ito_palette) +  # Use the custom palette
  theme(legend.position = "none")

```

